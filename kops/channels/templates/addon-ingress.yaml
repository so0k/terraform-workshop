apiVersion: v1
kind: ServiceAccount
metadata:
  name: skipper-ingress
  namespace: kube-system
  labels:
    k8s-addon: ${addon_label}
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: skipper-ingress
  labels:
    k8s-addon: ${addon_label}
rules:
- apiGroups: ["extensions"]
  resources: ["ingresses", ]
  verbs: ["get", "list"]
- apiGroups: ["extensions"]
  resources: ["ingresses/status", ]
  verbs: ["get", "list", "patch"]
- apiGroups: [""]
  resources: ["namespaces", "services", "endpoints"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: skipper-ingress
  labels:
    k8s-addon: ${addon_label}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: skipper-ingress
subjects:
- kind: ServiceAccount
  name: skipper-ingress
  namespace: kube-system
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: kube-ingress-aws-controller
  namespace: kube-system
  labels:
    k8s-addon: ${addon_label}
    app: kube-ingress-aws-controller
    component: ingress
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kube-ingress-aws-controller
      component: ingress
  template:
    metadata:
      labels:
        app: kube-ingress-aws-controller
        component: ingress
    spec:
      serviceAccountName: skipper-ingress
      containers:
      - name: controller
        image: registry.opensource.zalan.do/teapot/kube-ingress-aws-controller:${kube_ingress_aws_controller_version}
        args:
        - "-idle-connection-timeout=180s"          # increase idle timeout for ALB (default 60s)
        - "-ingress-class-filter=skipper-external" # only manage ingress.class=skipper-external
        env:
        - name: AWS_REGION
          value: ${aws_region}
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: skipper-ingress
  namespace: kube-system
  labels:
    k8s-addon: ${addon_label}
    app: skipper-ingress
    component: ingress
spec:
  selector:
    matchLabels:
      app: skipper-ingress
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      name: skipper-ingress
      labels:
        app: skipper-ingress
        component: ingress
    spec:
      hostNetwork: true
      serviceAccountName: skipper-ingress
      containers:
      - name: skipper-ingress
        image: registry.opensource.zalan.do/pathfinder/skipper:${skipper_version}
        ports:
        - name: ingress-port
          containerPort: 9999
          hostPort: 9999
        - name: metrics-port
          containerPort: 9911
        args:
          - "skipper"
          - "-kubernetes"
          - "-kubernetes-in-cluster"
          - "-kubernetes-https-redirect=true" # default = true
          - "-address=:9999"
          - "-proxy-preserve-host"
          - "-enable-ratelimits"
          - "-application-log-level=WARN"     # PANIC, FATAL, ERROR, WARN, INFO, DEBUG (default "INFO")
          - "-lb-healthcheck-interval=3s"
          - "-metrics-flavour=prometheus"
          - "-enable-connection-metrics"
          - "-metrics-exp-decay-sample"
          - "-serve-host-metrics"
          - "-experimental-upgrade"           # handle upgrade protocol
          - "-close-idle-conns-period=180s"   # increase idle timeout (default 20s)
        resources:
          limits:
            cpu: 200m
            memory: 200Mi
        readinessProbe:
          httpGet:
            path: /kube-system/healthz
            port: 9999
          initialDelaySeconds: 5
          timeoutSeconds: 5